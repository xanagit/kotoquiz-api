name: Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: '1.23.3'
  APP_NAME: 'kotoquiz-api'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      # Step 1: Clone repository
      - uses: actions/checkout@v4

        # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION}}

        # Step 3: Build Go application
      - name: Build Go application
        run: make release

        # Step 4: Set Docker image version
      - name: Set Docker image version
        run: echo "IMAGE_TAG=$(date +'%Y-%m-%d_%Hh%M')" >> $GITHUB_ENV

        # Step 5: Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

          # Step 6: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME}}:${{ env.IMAGE_TAG }} .

        # Step 7: Tag as "latest" and push
      - name: Tag and Push as latest
        run: |
            docker tag ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }} ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest
            docker push ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
            docker push ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:latest

        # Step 8: Create Git tag for the release
      - name: Create Git tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "${{ env.IMAGE_TAG }}" -m "Release for image tag ${{ env.IMAGE_TAG }}"
          git push origin "${{ env.IMAGE_TAG }}"
